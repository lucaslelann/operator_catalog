[["index.html", "Tercen Operator encyclopedia Preface", " Tercen Operator encyclopedia Tercen team Preface Operator encyclopedia. "],["basic-statistics.html", "1 Basic statistics 1.1 anova operator 1.2 Setup packrat 1.3 constant operator 1.4 cv operator 1.5 density operator 1.6 Fast t-SNE Docker Operator 1.7 Build the image 1.8 impute operator 1.9 IQR operator 1.10 max operator 1.11 Mean imputation operator 1.12 mean operator 1.13 mean sd operator 1.14 Median operator 1.15 Pairwise RMSD operator 1.16 Percentile operator 1.17 Introduction 1.18 RMSD operator 1.19 Round operator 1.20 Sample operator 1.21 sd operator 1.22 Seqlen operator 1.23 Setup packrat 1.24 shiny_docker_operator 1.25 Build 1.26 Setup packrat", " 1 Basic statistics 1.1 anova operator 1.1.0.1 Description anova operator performs an analaysis of variance of the data 1.1.0.1.1 Usage Input projection . color represents the groups to compare y-axis measurement value Output relations . pr numeric, p-value calculated per cell 1.1.0.1.2 Details anova operator performs an analaysis of variance of the data 1.1.0.2 References see https://en.wikipedia.org/wiki/Analysis_of_variance 1.1.0.2.1 See Also ttest, rfImp 1.1.0.3 Examples 1.2 Setup packrat packrat::init(options = list(use.cache = TRUE)) shiny::runApp(port=3044, launch.browser = TRUE) 1.3 constant operator 1.3.0.1 Description constant operator allows for a value equal to a constant to be generated 1.3.0.1.1 Usage Input projection . none Input parameters . value numeric, the constant value to be generated, default is 0 Output relations . constant numeric, one constant is generated per cell 1.3.0.1.2 Details A constant value is generated for all the data. All factors are therefore associated with this constant. A typical use of this operator is when you require to generate fixed boundary values to be used as a grid line in a later (i.e. downstream) step. The grid line is created in a layer using the h-grid view type. An example would be to create a zero grid line, where theconstantoperator is used to generate a zero value and a zero line is then available for later visuals. 1.3.0.2 References 1.3.0.2.1 See Also 1.3.0.3 Examples https://tercen.com/operator/p/8d8febb97ed4b09c2ddf52795c961e68 1.4 cv operator 1.4.0.1 Description cv operator calculates the coefficient of variance on a set of input values. 1.4.0.1.1 Usage Input projection . y-axis values to be used for the calculation of the cv, per cell Output relations . cv numeric, coefficient of variation result per cell 1.4.0.1.2 Details The coefficcient of variation is a measure of variaton, it is equivalent to standard deviation divided by the mean. cv = sd/mean The cv is returned as a fraction. 1.4.0.2 References see the https://en.wikipedia.org/wiki/Coefficient_of_variation 1.4.0.2.1 See Also sd, mean 1.4.0.3 Examples 1.4.1 Cytonorm operator 1.4.1.0.1 Description The Cytonorm operator normalizes cytometry data between mutliple batches. 1.4.1.0.2 Usage Input projection . y-axis numeric, input data, per cell Output relations . value numeric, median of the input data 1.4.1.0.3 Details 1.4.1.1 References https://github.com/saeyslab/CytoNorm 1.4.1.1.1 See Also flowsom_operator flowai_operator 1.5 density operator 1.5.0.1 Description density operator performs a density caculations on x and y input values. 1.5.0.1.1 Usage Input projection . x-axis indicates the values of the x y-axis indicates the values of the y Output relations . density numeric, density calculation, calculated per cell 1.5.0.1.2 Details A density calculation is performed per cell with the input values defined by the x and y-axis, the result are density values associated with each cell. The density operator is typically used in a pairwise plot and the returned density values are usually used as a coloring in a pairwise plot of the original input values. 1.5.0.2 References 1.5.0.2.1 See Also 1.5.0.3 Examples 1.6 Fast t-SNE Docker Operator 1.7 Build the image VERSION=0.0.1 docker build -t tercen/fast_tSNE_docker_operator:$VERSION . docker push tercen/fast_tSNE_docker_operator:$VERSION git add -A &amp;&amp; git commit -m &quot;$VERSION&quot; &amp;&amp; git tag $VERSION &amp;&amp; git push &amp;&amp; git push --tags 1.8 impute operator 1.8.0.0.1 Description impute operator replaces NA with zero. 1.8.0.0.2 Usage Input projection . y-axis is the input data for the imputation, per cell Output relations . impute numeric, a copy of the input data with NA replaces with zeros 1.8.0.0.3 Details The operator takes all the values of a cell and replaces it with the mean and if all values are NA then it is replaced with zero. The imputation is done per cell. There is one value calculated and returned for each of the input cell. 1.8.0.1 References 1.8.0.1.1 See Also 1.8.0.2 Examples 1.9 IQR operator 1.9.0.0.1 Description The IQR operator returns the interquartile range of a set of data points. 1.9.0.0.2 Usage Input projection . y-axis numeric, input data, per cell Output relations . iqr numeric, median of the input data 1.9.0.0.3 Details The operator takes all the values of a cell and returns the IQR value. The computation is done per cell and a single value is returned for each of the input cell. 1.9.0.1 References https://en.wikipedia.org/wiki/Interquartile_range 1.9.0.1.1 See Also mean_operator sd_operator cv_operator 1.10 max operator 1.10.0.0.1 Description max operator returns the maximum of a set of data points. 1.10.0.0.2 Usage Input projection . y-axis numeric, input data, per cell Output relations . max numeric, max of the input data 1.10.0.0.3 Details The operator takes all the values of a cell and returns the value which is the maximum. The computation is done per cell (one value is returned for each input cell). 1.10.0.0.4 References Based on the max R function. 1.10.0.0.5 See Also product_operator, sum_operator 1.11 Mean imputation operator 1.11.0.0.1 Description mean_imputation operator replaces missing values by the column mean. 1.11.0.0.2 Usage Input projection . row factor, observations column factor, variables y-axis numeric, input data, per cell Output relations . mean_imputed numeric, measurements with imputed values 1.11.0.0.3 Details The operator replaces missing values (NA) by the column mean. 1.11.0.0.4 References See Mean substitution on Wikipedia. 1.11.0.0.5 See also impute_operator 1.12 mean operator 1.12.0.0.1 Description mean operator computes the mean of a set of data points. 1.12.0.0.2 Usage Input projection . y-axis is the input data for the mean, per cell Output relations . mean numeric, mean of the input values 1.12.0.0.3 Details The operator takes all the values of a cell and calculates their mean. The computation is done per cell. There is one value calculated and returned for each of the input cell. 1.12.0.1 References 1.12.0.1.1 See Also product_operator, sum_operator 1.12.0.2 Examples 1.13 mean sd operator 1.13.0.0.1 Description mean sd operator computes the mean and standard deviation of a set of data points. 1.13.0.0.2 Usage Input projection . y-axis numeric, input data, per cell Output relations . mean numeric, mean of the input data sd numeric, standard deviation of the input data 1.13.0.0.3 Details The operator takes all the values of a cell and calculates their mean and standard deviation. The computation is done per cell. There are two value calculated and returned for each of the input cell. 1.13.0.1 References 1.13.0.1.1 See Also product_operator, sum_operator 1.13.0.2 Examples 1.14 Median operator 1.14.0.0.1 Description Median operator returns the median of a set of data points. 1.14.0.0.2 Usage Input projection . y-axis numeric, input data, per cell Output relations . median numeric, median of the input data 1.14.0.0.3 Details The operator takes all the values of a cell and returns the value which is the median.The computation is done per cell. There is one value returned for each of the input cell. 1.14.0.1 References 1.14.0.1.1 See Also mean_operator #### Examples #R packrat::init(options = list(use.cache = TRUE)) 1.15 Pairwise RMSD operator 1.15.0.0.1 Description The pairwise_RMSD operator returns the Relative Mean Squared Deviation computed between pairs of variables. 1.15.0.0.2 Usage Input projection . row factor, input variables col factor, observations .y numeric, measurements Output relations . rmsd numeric, RMSD to numeric, variable to be projected against the initial one for pairwise distance visualisation 1.15.0.0.3 Details 1.15.0.0.4 References 1.15.0.0.5 See Also 1.15.0.0.6 Examples 1.16 Percentile operator 1.16.0.0.1 Description percentile operator returns the percentile of a set of data points. 1.16.0.0.2 Usage Input projection . y-axis numeric, input data, per cell Input parameters . percentile numeric, the percentile to use, default is 0.01, 1% percentile Output relations . percentile numeric, percentile of the input data 1.16.0.0.3 Details The operator takes all the values of a cell and returns the precentile value. The computation is done per cell. There is one value returned for each of the input cell. 1.16.0.1 References 1.16.0.1.1 See Also product_operator, sum_operator 1.16.0.2 Examples 1.17 Introduction This is a template repository. Use this template repository during the first step of developing a tercen operator (in R) on github. An overview of steps for developing an operator are: create a github repo install tercen_studio login to tercen_studio git clone the newly created repo start developing in R in tercen_studio add R packages to the repo push to the github repo go to tercen and install the operator For step 1, when creating the repo on github, you will notice the option to use a template repository, choose the templateR_operator repository and select it as the template repository. After creation, you now have a new repository with all the convenient files for making a new operator (in R) for tercen. Use tercen_studio to clone the new repository and start programming in tercen_studio it includes the skeleton files main.R workspace.R operator.json README_template.md doc directory please remember to change the README_template.md to README.template.md inside the doc there is a dev_commands.md file which contains useful development command lines. 1.18 RMSD operator 1.18.0.0.1 Description RMSD operator returns the Relative Mean Square Deviation of two variables. 1.18.0.0.2 Usage Input projection . x-axis numeric, input data, per cell y-axis numeric, input data, per cell Output relations . rmsd numeric, RMSD of the input data 1.18.0.0.3 Details 1.18.0.1 References 1.18.0.1.1 See Also lm_operator 1.18.0.2 Examples 1.19 Round operator 1.19.0.0.1 Description Round operator implements different number rounding methods. 1.19.0.0.2 Usage Input projection . y-axis numeric, input data, per cell Output relations . rounded numeric, rounded input data 1.20 Sample operator 1.20.0.0.1 Description Sample operator returns a sample of the specified size from the set of data points using either with or without replacement. 1.20.0.0.2 Usage Input projection . y-axis numeric, input data cols numeric, observations, the sample factor(s) Input parameters . size numeric, the fraction to sample, default is 1 (100% percent) replace boolean, should replacement be used? , default is false (no replacement) Output relations . sample numeric, sample of the input data 1.20.0.0.3 Details The operator randomly selects columns (i.e. samples) 1.20.0.1 References See the sample function in base R. 1.20.0.1.1 See Also 1.20.0.2 Examples 1.21 sd operator 1.21.0.0.1 Description sd operator computes the standard deviation of a set of data points. 1.21.0.0.2 Usage Input projection . y-axis is the input data for the sd, per cell Output relations . sd numeric, sd of the input values 1.21.0.0.3 Details The operator takes all the values of a cell and calculates their standard deviation. The computation is done per cell. There is one value calculated and returned for each of the input cell. 1.21.0.1 References 1.21.0.1.1 See Also mean_operator, sum_operator 1.21.0.2 Examples 1.22 Seqlen operator 1.22.0.0.1 Description Seqlen operator creates a sequence annotation for a data series 1.22.0.0.2 Usage Input projection . y-axis numeric, input data, per cell x-axis numeric, input data, ordering of the data series Output relations . seq numeric, sequence of the input data 1.22.0.0.3 Details The operator takes all the values of a cell ordered by the x-axisand gives a sequence number to each data point in the cell. 1.22.0.1 References 1.22.0.1.1 See Also topn_operator 1.22.0.2 Examples 1.23 Setup packrat packrat::init(options = list(use.cache = TRUE)) shiny::runApp(port=3044, launch.browser = TRUE) 1.24 shiny_docker_operator https://github.com/tercen/shiny_docker_operator.git 1.25 Build VERSION=0.10.0.1 docker build -t tercen/shiny_docker_operator:$VERSION . docker push tercen/shiny_docker_operator:$VERSION git add -A &amp;&amp; git commit -m &quot;$VERSION&quot; &amp;&amp; git tag $VERSION &amp;&amp; git push &amp;&amp; git push --tags 1.26 Setup packrat packrat::init(options = list(use.cache = TRUE)) "],["shiny-app.html", "2 Shiny app 2.1 Template Docker Operator 2.2 For all operators 2.3 For R operators 2.4 For Shiny operators 2.5 Build the image 2.6 Introduction 2.7 topn operator 2.8 Setup packrat 2.9 Word count operator", " 2 Shiny app A simple shiny tercen operator : - display an histrogram - compute the mean devtools::install_github(&quot;tercen/teRcen&quot;) shiny::runApp(port=3044, launch.browser = FALSE) 2.1 Template Docker Operator 2.2 For all operators Replace repository URL Replace version number in files 2.3 For R operators isWebApp: false 2.4 For Shiny operators isWebApp: true 2.5 Build the image VERSION=0.10.0.1 docker build -t tercen/shiny_docker_operator:$VERSION . docker push tercen/shiny_docker_operator:$VERSION git add -A &amp;&amp; git commit -m &quot;$VERSION&quot; &amp;&amp; git tag $VERSION &amp;&amp; git push &amp;&amp; git push --tags 2.6 Introduction This is a template repository. Use this template repository during the first step of developing a tercen operator (in R) on github. An overview of steps for developing an operator are: create a github repo install tercen_studio login to tercen_studio git clone the newly created repo start developing in R in tercen_studio add R packages to the repo push to the github repo go to tercen and install the operator For step 1, when creating the repo on github, you will notice the option to use a template repository, choose the templateR_operator repository and select it as the template repository. After creation, you now have a new repository with all the convenient files for making a new operator (in R) for tercen. Use tercen_studio to clone the new repository and start programming in tercen_studio it includes the skeleton files main.R workspace.R operator.json README_template.md doc directory please remember to change the README_template.md to README.template.md inside the doc there is a dev_commands.md file which contains useful development command lines. 2.7 topn operator 2.7.0.0.1 Description topn operator returns data points. 2.7.0.0.2 Usage Input projection . y-axis numeric, input data, per cell Output relations . elements numeric, choosen elements of the input data 2.7.0.0.3 Details The operator takes all the values of a cell and returns the top n elements. 2.7.0.1 References 2.7.0.1.1 See Also 2.7.0.2 Examples 2.8 Setup packrat packrat::init(options = list(use.cache = TRUE)) shiny::runApp(port=3044, launch.browser = TRUE) 2.9 Word count operator 2.9.0.0.1 Description Word count operator count the occurences of each words in one or more documents. 2.9.0.0.2 Usage Input projection . row is the documentId Output relations . count numeric, mean of the input values word character, the word documentId character, the id of the document 2.9.0.0.3 Details The operator count the occurences of each words in one or more documents. 2.9.0.1 References 2.9.0.1.1 See Also 2.9.0.2 Examples "],["data-wrangling.html", "3 Data wrangling 3.1 Separate operator", " 3 Data wrangling 3.1 Separate operator 3.1.0.0.1 Description Separate a character column into multiple columns with a regular expression or numeric locations. 3.1.0.0.2 Usage Input projection . row single character column Output relations . col1 numeric or character col2 numeric or character etc.. multiple columns 3.1.0.0.3 Details Given a regular expression , Separate turns a single character column into multiple columns. 3.1.0.0.4 References This operator is a wrapper of the strsplit R function. 3.1.0.0.5 See Also replace_operator "],["file-import.html", "4 File import 4.1 readRDS operator 4.2 Read excel file operator 4.3 Read FASTA operator 4.4 FCS ZIP operator 4.5 Read FCS operator", " 4 File import 4.1 readRDS operator 4.1.0.0.1 Description readRDS operator imports rdsdata files 4.1.0.0.2 Usage Input projection . col documentid, this the documentid of the file Output relations . a tercen table tableid, for every tablid there is a documentid relation 4.1.0.0.3 Details The operator takes the documentIds (i.e. the RDS data file) and converts them to a tercen table. 4.1.0.1 References see the readRDS() function in base R. 4.1.0.1.1 See Also readxls_operator #### Examples 4.2 Read excel file operator 4.2.0.0.1 Description 4.2.0.0.2 Usage Input projection . row is the documentId Output relations . 4.2.0.0.3 Details The operator import excel document to tercen. 4.2.0.1 References 4.2.0.1.1 See Also 4.2.0.2 Examples 4.3 Read FASTA operator 4.3.0.0.1 Description read_fasta operator reads a FASTA file into Tercen. 4.3.0.0.2 Usage Input projection . col factor, document ID Output relations . name factor, sequence name position numeric, position of amino or nucleic acid in the sequence letter factor, letter corresponding to an amino or nucleic acid value numeric, numeric value associated to an amino or nucleic acid 4.3.0.0.3 Details This opeartor reads a FASTA file and returns a table with one row per sequence per letter. Columns correspond to the sequence name (extracted from identifier lines starting with &gt;), position on the sequence (starting from 1 at the beginning of the sequence), the letter (corresponding to an amino or nucleic acid), and a value (corresponding to a numeric encoding of letters for visualisation purposes). 4.3.0.0.4 References FASTA format on Wikipedia. 4.3.0.0.5 See Also msa_operator 4.4 FCS ZIP operator 4.4.0.0.1 Description Transform zipped fcs files to tercen dataset. 4.4.0.0.2 Usage Input projection . documentId is the documentId, a zip file Output relations . filename character, the name of the fcs file channels numeric, one variable per channel in the fcs file 4.4.0.0.3 Details Extracts a ZIP archive of fcs files and tranforms them to tercen datasets. Flow Cytometry Standard is a data file standard for the reading and writing of data from flow cytometry experiments. 4.4.0.1 References 4.4.0.1.1 See Also 4.4.0.2 Examples 4.5 Read FCS operator 4.5.0.0.1 Description read_fcs operator transforms FCS files to Tercen datasets. 4.5.0.0.2 Usage Input projection . documentId is the documentId Output relations . documentId character, the id of the document 4.5.0.0.3 Details Transforms FCS files to Tercen dataset. The Flow Cytometry Standard is a data file standard for the reading and writing of data from flow cytometry experiments. "],["statistical-testing.html", "5 Statistical testing", " 5 Statistical testing "],["section.html", "6 ", " 6 "],["data-visualisation.html", "7 Data visualisation", " 7 Data visualisation "],["section-1.html", "8 ", " 8 "],["dimensionality-reduction-and-clustering.html", "9 Dimensionality reduction and clustering 9.1 Clustering metrics operator 9.2 Hierarchical clustering tree operator 9.3 flowsom operator 9.4 rphenograph operator 9.5 somflow operator", " 9 Dimensionality reduction and clustering 9.1 Clustering metrics operator 9.1.0.0.1 Description clustering_metrics operator returns clustering metrics. 9.1.0.0.2 Usage Input projection . row represents the variables col represents the observations label represents the clusters y-axis is the value of the measurement Output relations . metrics character, name of the clustering metric value numeric, value of the clustering metric 9.1.0.0.3 Details 9.1.0.0.4 References This operator is based on the clusterCrit R function. 9.1.0.0.5 See Also hierarchical_clustering_operator, flowsom_operator, clusterx_operator 9.2 Hierarchical clustering tree operator 9.2.0.0.1 Description clustering_tree operator returns a hierarchical clustering tree to be projected in Tercen. 9.2.0.0.2 Usage Input projection . row factor, variables to cluster col factor, variables to cluster (dist_to variable from a dist operator) y-axis numeric, pairwise distance (dist variable from a dist operator) Output relations . presence numeric, to be projected on y-axis tree_dim1 factor, to be projected on rows tree_dim2 factor, to be projected on columns tip_labels factor, leaf labels, to be projected on rows 9.3 flowsom operator 9.3.0.1 Description flowsom operator performs the SOM (self organizing maps) in the flowSOM R package. 9.3.0.1.1 Usage Input projection . row represents the variables (e.g. channels, markers) col represents the observations (e.g. cells) y-axis is the value of measurement signal of the channel/marker Input parameters . xdim Width of the grid ydim Hight of the grid rlen Number of times to loop over the training data for each MST mst Number of times to build an MST alpha_start Start learning rate alpha_end End learning rate dstf Distance function (1=manhattan, 2=euclidean, 3=chebyshev, 4=cosine) Output relations . mapping_node_num numeric, per column (e.g. per cell) mapping_node_label character, per column (e.g. per cell) 9.3.0.1.2 Details The operator is the SOM function of the flowSOM R package. 9.3.0.2 References see the flowSOM::SOM function of the R package for the documentation, 9.3.0.2.1 See Also clusterx 9.3.0.3 Examples 9.4 rphenograph operator 9.4.0.1 Description rephenograph operator performs a phenotype clustering in the Rphenograph R package. 9.4.0.1.1 Usage Input projection . row represents the variables (e.g. channels, markers) col represents the observations (e.g. cells) y-axis is the value of measurement signal of the channel/marker Input parameters . xdim Width of the grid ydim Hight of the grid rlen Number of times to loop over the training data for each MST mst Number of times to build an MST alpha_start Start learning rate alpha_end End learning rate dstf Distance function (1=manhattan, 2=euclidean, 3=chebyshev, 4=cosine) Output relations . mapping_node_num numeric, per column (e.g. per cell) mapping_node_label character, per column (e.g. per cell) 9.4.0.1.2 Details The operator is the rphenograph function of the Rphenograh R package. 9.4.0.2 References see the rphenograph::SOM function of the R package for the documentation, 9.4.0.2.1 See Also 9.4.0.3 Examples 9.5 somflow operator 9.5.0.1 Description somflow operator performs the SOM (self organizing maps) in the FlowSOM R package. 9.5.0.1.1 Usage Input projection . row represents the variables (e.g. channels, markers) col represents the observations (e.g. cells) y-axis is the value of measurement signal of the channel/marker Input parameters . xdim Width of the grid ydim Hight of the grid rlen Number of times to loop over the training data for each MST mst Number of times to build an MST alpha_start Start learning rate alpha_end End learning rate dstf Distance function (1=manhattan, 2=euclidean, 3=chebyshev, 4=cosine) Output relations . mapping_node_label character, per column (e.g. per cell) 9.5.0.1.2 Details The operator is the SOM function of the flowSOM R package. 9.5.0.2 References see the FlowSOM::SOM function of the R package for the documentation, 9.5.0.2.1 See Also clusterx 9.5.0.3 Examples "],["flow-cytometry.html", "10 Flow Cytometry 10.1 FlowSOM operator 10.2 MEM operator 10.3 flowsom operator 10.4 rphenograph operator 10.5 somflow operator", " 10 Flow Cytometry 10.1 FlowSOM operator 10.1.0.0.1 Description FlowSOM operator for flow cytometry data. 10.1.0.0.2 Usage Input projection . row represents the variables (e.g. channels, markers) col represents the clusters (e.g. cells) y-axis is the value of measurement signal of the channel/marker Input parameters . nclust Number of clusters to make (default = NULL) maxMeta Maximal number of cluster (ignored if nclust is not NULL) seed Random seed xdim Width of the grid ydim Hight of the grid rlen Number of times to loop over the training data for each MST mst Number of times to build an MST alpha_start Start learning rate alpha_end End learning rate dstf Distance function (1=manhattan, 2=euclidean, 3=chebyshev, 4=cosine) Output relations . cluster character, cluster label 10.1.0.0.3 Details The operator is a wrapper for the FlowSOM function of the FlowSOM R/Bioconductor package. 10.1.0.1 References https://bioconductor.org/packages/FlowSOM/ 10.1.0.1.1 See Also flowsom_operator flowsom_mst_shiny_operator 10.2 MEM operator 10.2.0.0.1 Description Marker Enrichment Modeling operator for flow cytometry data. 10.2.0.0.2 Usage Input projection . row represents the variables (e.g. channels, markers) col represents the clusters (e.g. cells) colors represents the groups (e.g. flowSOM clusters) y-axis is the value of measurement signal of the channel/marker Output relations . mem numeric, mem scores per row and per color (e.g. per channel/marker and per flowSOM clusters) cluster character, cluster value 10.2.0.0.3 Details The operator is a wrapper for the MEM function of the MEM R package. 10.2.0.1 References https://github.com/cytolab/mem 10.2.0.1.1 See Also flowsom_operator flowsom_mst_shiny_operator 10.3 flowsom operator 10.3.0.1 Description flowsom operator performs the SOM (self organizing maps) in the flowSOM R package. 10.3.0.1.1 Usage Input projection . row represents the variables (e.g. channels, markers) col represents the observations (e.g. cells) y-axis is the value of measurement signal of the channel/marker Input parameters . xdim Width of the grid ydim Hight of the grid rlen Number of times to loop over the training data for each MST mst Number of times to build an MST alpha_start Start learning rate alpha_end End learning rate dstf Distance function (1=manhattan, 2=euclidean, 3=chebyshev, 4=cosine) Output relations . mapping_node_num numeric, per column (e.g. per cell) mapping_node_label character, per column (e.g. per cell) 10.3.0.1.2 Details The operator is the SOM function of the flowSOM R package. 10.3.0.2 References see the flowSOM::SOM function of the R package for the documentation, 10.3.0.2.1 See Also clusterx 10.3.0.3 Examples 10.4 rphenograph operator 10.4.0.1 Description rephenograph operator performs a phenotype clustering in the Rphenograph R package. 10.4.0.1.1 Usage Input projection . row represents the variables (e.g. channels, markers) col represents the observations (e.g. cells) y-axis is the value of measurement signal of the channel/marker Input parameters . xdim Width of the grid ydim Hight of the grid rlen Number of times to loop over the training data for each MST mst Number of times to build an MST alpha_start Start learning rate alpha_end End learning rate dstf Distance function (1=manhattan, 2=euclidean, 3=chebyshev, 4=cosine) Output relations . mapping_node_num numeric, per column (e.g. per cell) mapping_node_label character, per column (e.g. per cell) 10.4.0.1.2 Details The operator is the rphenograph function of the Rphenograh R package. 10.4.0.2 References see the rphenograph::SOM function of the R package for the documentation, 10.4.0.2.1 See Also 10.4.0.3 Examples 10.5 somflow operator 10.5.0.1 Description somflow operator performs the SOM (self organizing maps) in the FlowSOM R package. 10.5.0.1.1 Usage Input projection . row represents the variables (e.g. channels, markers) col represents the observations (e.g. cells) y-axis is the value of measurement signal of the channel/marker Input parameters . xdim Width of the grid ydim Hight of the grid rlen Number of times to loop over the training data for each MST mst Number of times to build an MST alpha_start Start learning rate alpha_end End learning rate dstf Distance function (1=manhattan, 2=euclidean, 3=chebyshev, 4=cosine) Output relations . mapping_node_label character, per column (e.g. per cell) 10.5.0.1.2 Details The operator is the SOM function of the flowSOM R package. 10.5.0.2 References see the FlowSOM::SOM function of the R package for the documentation, 10.5.0.2.1 See Also clusterx 10.5.0.3 Examples "],["rna-sequencing.html", "11 RNA sequencing 11.1 DESeq2_two_conditions operator 11.2 Description 11.3 Usage 11.4 Details 11.5 References", " 11 RNA sequencing 11.1 DESeq2_two_conditions operator 11.2 Description DESeq2_two_conditions tests for differential gene expression in samples from two conditions using the DESeq2 package from BioConductor (Love, et al, Genome Biology, 2014). 11.3 Usage Input projection Description row Gene name/identifier column Sample name/identifier color Represents the groups to compare y-axis Sequence counts Input parameters Description alpha Numeric, adjusted p value cutoff for independent filtering (default = 0.1) LFC_shrinkage Logical, whether the returned log fold-change values should be shrinked (default = TRUE) shrinkage_type normal, apeglm or ashr, Type of shrinkage estimator to use (default = normal) Output relations Description pvalue numeric, p-value calculated per gene padj numeric, p-value calculated per gene after adjusting for multiple testing baseMean numeric, mean of normalized counts for all the samples log2FoldChange numeric, shrunken log2 fold-change between the two groups to compare minus_log10_padj numeric, negative log10 transformation of padj for more intuitive plotting 11.4 Details The operator uses the DESeq2 package from BioConductor. 11.5 References Love MI, Huber W, Anders S (2014). Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. Genome Biology, 15, 550. doi: 10.1186/s13059-014-0550-8. See Analyzing RNA-seq data with DESeq2 for further information on DESeq2 by Love, et al. "],["template.html", "12 Template 12.1 Template Shiny operator for Tercen", " 12 Template 12.1 Template Shiny operator for Tercen 12.1.0.0.1 Description The Template Shiny operator is a template repository for the creation of Shiny operators in Tercen. 12.1.0.0.2 Usage Input projection . x-axis type, description y-axis type, description row type, description column type, description colors type, description labels type, description Output relations . Operator view view of the Shiny application 12.1.0.0.3 Details The operator takes all the values of a cell and returns the value which is the median.The computation is done per cell. There is one value returned for each of the input cell. 12.1.0.1 References 12.1.0.1.1 See Also templateR_operator "]]
